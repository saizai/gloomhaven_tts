--[[--_uGM_hp_@guid@|@GUID@  --do not remove this line
--  DO NOT ALTER OR REMOVE THE LINES BELOW  --
bh = nil  sc = nil  fg = nil  bg = nil  cb = {}  cbc = 0  ck = os.clock()

function update()  if cb[1] then cbc = cbc + 1  self.call(cb[1]) end  end
function cbOn(a)
  if a[1] == cb[1] then cbc = 0  do return end  end
  local n = 1  while cb[n] do  n = n+1  end  cb[n] = a[1]  if n == 1 then cbc = 0 end
end
function cbOff()  cb[1] = nil  local n = 2  while cb[n] do  cb[n-1] = cb[n]  n = n+1  end  cb[n-1] = nil  end

function onLoad()  setGUID()  cbOn({"goTime"})  end

function goTime()  if cbc < 62 then do return end  end  cbOff()
  bh = (self.getScale().y+1.5)^2  sc = nill  hideBar()
end

function setGUID()
  local n = string.find(self.getLuaScript(), "_uGM_hp_")
  fg = string.sub(self.getLuaScript(), n+8, n+13)  bg = string.sub(self.getLuaScript(), n+15, n+20)
  if getObjectFromGUID(fg) then getObjectFromGUID(fg).lock() end
  if getObjectFromGUID(bg) then  getObjectFromGUID(bg).lock()  getObjectFromGUID(bg).interactable = false  end
end

function noBars()  if not getObjectFromGUID(fg) or not getObjectFromGUID(bg) then  onDestroy()  return true  end  end

function setBar()  if noBars() then do return end  end
  if Global.getVar("uGMbAr") then hideBar() else cbOn({"prepBar"}) end
end

function prepBar()
  if self.resting != true then do return end  end  cbOff()
  local hm = self.getPosition()  local rt = self.getRotation()  local s = self.getScale().y
  if sc != s then
    sc = s  bh = (s+1.5)^2  getObjectFromGUID(fg).unlock()
    getObjectFromGUID(fg).setScale({0.15, 1, 0.15})
    getObjectFromGUID(fg).setPosition({hm[1], hm[2]+bh, hm[3]})
    getObjectFromGUID(fg).setPositionSmooth({hm[1], hm[2]+bh-0.2, hm[3]})
  else  showBar()  end
end

function showBar()  if noBars() then do return end  end
  local c = nil  -- CHANGE to c = 1 FOR CENTER JUSTIFIED HEALTH BARS
  local i = true  local s = (bh+1.6)/20  getObjectFromGUID(fg).lock()
  local hm = self.getPosition()  local rt = self.getRotation()  local hp = getObjectFromGUID(fg).getName()
  local m = tonumber(string.sub(hp, string.find(hp, "%/")+1))
  local n = tonumber(string.sub(hp, 1, string.find(hp, "%/")-1))  if n < 0 then n = 0 end  n = n/m
  getObjectFromGUID(fg).setScale({s, 1, s})
  getObjectFromGUID(fg).setPosition({hm[1], hm[2]+bh, hm[3]})
  getObjectFromGUID(fg).setRotation({90, rt[2]+90, 90})
  getObjectFromGUID(bg).setScale({s*n*0.8, 1, s*0.88})
  getObjectFromGUID(bg).setRotation({90, rt[2]+90, 90})
  if c then getObjectFromGUID(bg).setPosition({hm[1], hm[2]+bh, hm[3]}) else
    s = s * 4.9  s = s - (s * n)  local a = rt[2] + 90
    local x = math.sin(math.rad(a)) * s  local z = x / math.tan(math.rad(a))
    getObjectFromGUID(bg).setPosition({hm[1]+x, hm[2]+bh, hm[3]+z})
  end
  if Global.getVar("uGMnUm") then i = false end
  getObjectFromGUID(fg).interactable = i
end

function hideBar()  if noBars() then do return end  end
  getObjectFromGUID(fg).lock()  getObjectFromGUID(fg).interactable = false
  local hm = self.getPosition()  local rt = self.getRotation()
  getObjectFromGUID(fg).setPositionSmooth({hm[1], -1, hm[3]})
  getObjectFromGUID(fg).setPosition({hm[1], -1, hm[3]})
  getObjectFromGUID(bg).setPosition({hm[1], -1, hm[3]})
end

function onCollisionEnter(a)
  if not bh then do return end
  elseif a.collision_object.guid == fg then
    if self.name == "Card" then bh = 1 else bh = 0 end
    bh = (a.collision_object.getPosition().y - self.getPosition().y + 0.1) * 1.1 + bh
    if bh < 0.5 then bh = 0.5 end  cbOn({"restBar"})
  elseif a.collision_object.guid != bg then setBar() end
end

function restBar()
  getObjectFromGUID(fg).lock()
  if getObjectFromGUID(fg).resting != true then do return end  end
  cbOff()  showBar()
end

function onPickUp()  hideBar()  if not noBars() then getObjectFromGUID(fg).call("udoButtons") end  end

function hideBtns()  if os.clock()-ck < 3.5 then do return end  end  cbOff()
   getObjectFromGUID(fg).call("udoButtons")
end  function bumpHide()  ck = os.clock()  cbOn({"hideBtns"})  end

function upBar()  bh = bh*1.05  end

function onDestroy()
  if getObjectFromGUID(fg) then getObjectFromGUID(fg).destruct() end
  if getObjectFromGUID(bg) then getObjectFromGUID(bg).destruct() end
end


--tt _uGM_4tt
tgl = 0

function onLoad()
  local btn = {}  btn.function_owner = self  btn.width = 500  btn.height = 500
  btn.click_function = "btnTgl"  btn.position = {0, 0, 0}  self.createButton(btn)
end

function doButtons()  tgl = 1  self.interactable = true
  local btn = {}  btn.function_owner = self  btn.width = 600  btn.height = 600
  btn.click_function = "btnIn"  btn.label = "-"  btn.font_size = 600  btn.position = {-5.76, 0, -1.23}  self.createButton(btn)
  btn.click_function = "btnVn"  btn.label = "V"  btn.font_size = 450  btn.position = {-5.76, 0, 0}  self.createButton(btn)
  btn.click_function = "btnXn"  btn.label = "X"  btn.font_size = 450  btn.position = {-5.76, 0, 1.23}  self.createButton(btn)
  btn.click_function = "btnIp"  btn.label = "+"  btn.font_size = 600  btn.position = {-6.98, 0, -1.23}  self.createButton(btn)
  btn.click_function = "btnVp"  btn.label = "V"  btn.font_size = 450  btn.position = {-6.98, 0, 0}  self.createButton(btn)
  btn.click_function = "btnXp"  btn.label = "X"  btn.font_size = 450  btn.position = {-6.98, 0, 1.23}  self.createButton(btn)
  btn.click_function = "btnMx"  btn.label = "-"  btn.font_size = 600  btn.position = {5.76, 0, 0}  self.createButton(btn)
  btn.click_function = "btnUp"  btn.label = "^"  btn.font_size = 600  btn.position = {4.35, 0, -0.76}  self.createButton(btn)
end
function udoButtons()
  if Global.getVar("uGMnUm") then self.interactable = false end
  if tgl == 1 then tgl = 0  local i  for i = 1, 8 do  self.removeButton(i)  end  end
end

function btnTgl(d, c)  local p = 1
  if Global.getVar("uGMuSe") and c != "Black" then p = nil end
  if p then  if tgl == 1 then udoButtons() else doButtons() end  end
end

function btnIn() putHP(getHP() - 1) end  function btnVn() putHP(getHP() - 5) end  function btnXn() putHP(getHP() - 10) end
function btnIp() putHP(getHP() + 1) end  function btnVp() putHP(getHP() + 5) end  function btnXp() putHP(getHP() + 10) end
function btnMx()
  local m = getMax()-1  if m < 1 then m = 1 end
  local n = getHP()  if n > m then n = m end  self.setName(n.." / "..m)  showBar()
end

function btnUp()  getObjectFromGUID("@guid@").call("upBar") showBar()  end

function getHP()  return(tonumber(string.sub(self.getName(), 1, string.find(self.getName(), "%/")-1)))  end

function getMax()  return(tonumber(string.sub(self.getName(), string.find(self.getName(), "%/")+1)))  end

function putHP(a)  local m = getMax()  if a > m then m = a end  self.setName(a.." / "..m)  showBar()  end

function showBar()  getObjectFromGUID("@guid@").call("bumpHide")  getObjectFromGUID("@guid@").call("showBar")  end


--tt  _uGM_5tt]]
-- ^^^  DO NOT ALTER OR REMOVE THESE LINES ABOVE  ^^^

co = nil  cbp = nil

function onLoad()  doButtons()  end

function doButtons()
  local btn = {}  btn.function_owner = self  btn.width = 300  btn.height = 300
  btn.click_function = "btnBar"  btn.position = {1.4, -0.05, -1.44}  self.createButton(btn)
  btn.click_function = "btnNum"  btn.position = {1.4, -0.05, -0.82}  self.createButton(btn)
  btn.click_function = "btnUse"  btn.position = {1.4, -0.05, -0.2}  self.createButton(btn)
end

function btnBar()  local g = "Health Bars are Hidden."
  if Global.getVar("uGMbAr") then Global.setVar("uGMbAr", nil)  g = "Health Bars are Visible."
    else Global.setVar("uGMbAr", 1) end  broadcastToAll(g, {0.7, 0.7, 0.7})  pokeBars()
end
function btnNum()  local g = "Numbers will be Hidden."
  if Global.getVar("uGMnUm") then Global.setVar("uGMnUm", nil)  g = "Numbers will be Shown."
    else Global.setVar("uGMnUm", 1) end  broadcastToAll(g, {0.7, 0.7, 0.7})  pokeBars()
end
function btnUse()  local g = "Only the Black Hand may Edit HP."
  if Global.getVar("uGMuSe") then Global.setVar("uGMuSe", nil)  g = "All Players may Edit HP."
    else Global.setVar("uGMuSe", 1) end  broadcastToAll(g, {0.7, 0.7, 0.7})
end

function pokeBars()
  local aoj = {}  aoj = getAllObjects()  local g = aoj[1]  local n = 1
  while g do
    if string.sub(g.getLuaScript(), 3, 10) == "_uGM_hp_" then g.call("setBar")  end
    n = n+1  g = aoj[n]
  end
end

function onPickUp()  if co == nil then co = 0 end  end
function onDrop()  if co == nil or co == 0 then co = 1 end  end
function update()  if co == 1 then if self.resting then co = nil end end  end

function onCollisionEnter(a)
  if co != nil then do return end  else co = a.collision_object end
  local n = co.name  -- print(n) -- Un-Rem this Print to find the name text of an object.
  local ok = "@Custom_Model@Figurine_Custom@Card@"  -- Add the output text from the Print above to variable 'ok'.
  if string.find(ok, n) or string.sub(n, 1, 4) == "rpg_" then
    if string.sub(co.getLuaScript(), 3, 10) == "_uGM_hp_" or co.getLuaScript() == "" then
      local p = {}  local i = {}  p.type = "Custom_Token"  p.position = {0, -33, 0}  p.rotation = {90, 0, 90}
      p.callback = "cbFBar"  p.callback_owner = self  local o = spawnObject(p)
      i.thickness = 0.07  i.image = "https://sites.google.com/site/rolesystemssky/hp_frame.png"  o.setCustomObject(i)
    else co = nil  end
  else co = nil  end
end

function cbFBar(a)  a.setName("10 / 10")
  local p = {}  local i = {}  p.type = "Custom_Token"  p.position = {2, -35, -4}  p.rotation = {90, 0, 90}
  p.callback = "cbBar"  p.callback_owner = self  cbp = a.guid  local o = spawnObject(p)
  i.thickness = 0.08  i.image = "https://sites.google.com/site/rolesystemssky/hp_bar.png"  o.setCustomObject(i)
end

function cbBar(a)
  local s = self.getLuaScript()  local ss = string.sub(s, 5, string.find(s, "_uGM_4tt")-1)
  ss = string.gsub(ss, "@guid@", cbp)  ss = string.gsub(ss, "@GUID@", a.guid)  local q = nil
  if co.getLuaScript() != "" then  co.call("onDestroy")  q = 1  end
  co.setLuaScript(ss)  if q then co.call("onLoad") end
  ss = string.sub(s, string.find(s, "_uGM_4tt")+10, string.find(s, "_uGM_5tt")-1)
  ss = string.gsub(ss, "@guid@", co.guid)  --ss = string.gsub(ss, "@GUID@", a.guid)
  getObjectFromGUID(cbp).setLuaScript(ss)  co = nil
end


--tt