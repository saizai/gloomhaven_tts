--_uGM_hp_8e7fa2|657d9d  --do not remove this line
--  DO NOT ALTER OR REMOVE THE LINES BELOW  --
bh = nil  sc = nil  fg = nil  bg = nil  cb = {}  cbc = 0  ck = os.clock()

function update()  if cb[1] then cbc = cbc + 1  self.call(cb[1]) end  end
function cbOn(a)
  if a[1] == cb[1] then cbc = 0  do return end  end
  local n = 1  while cb[n] do  n = n+1  end  cb[n] = a[1]  if n == 1 then cbc = 0 end
end
function cbOff()  cb[1] = nil  local n = 2  while cb[n] do  cb[n-1] = cb[n]  n = n+1  end  cb[n-1] = nil  end

function onLoad()  setGUID()  cbOn({"goTime"})  end

function goTime()  if cbc < 62 then do return end  end  cbOff()
  bh = (self.getScale().y+1.5)^2  sc = nill  hideBar()
end

function setGUID()
  local n = string.find(self.getLuaScript(), "_uGM_hp_")
  fg = string.sub(self.getLuaScript(), n+8, n+13)  bg = string.sub(self.getLuaScript(), n+15, n+20)
  if getObjectFromGUID(fg) then getObjectFromGUID(fg).lock() end
  if getObjectFromGUID(bg) then  getObjectFromGUID(bg).lock()  getObjectFromGUID(bg).interactable = false  end
end

function noBars()  if not getObjectFromGUID(fg) or not getObjectFromGUID(bg) then  onDestroy()  return true  end  end

function setBar()  if noBars() then do return end  end
  if Global.getVar("uGMbAr") then hideBar() else cbOn({"prepBar"}) end
end

function prepBar()
  if self.resting != true then do return end  end  cbOff()
  local hm = self.getPosition()  local rt = self.getRotation()  local s = self.getScale().y
  if sc != s then
    sc = s  bh = (s+1.5)^2  getObjectFromGUID(fg).unlock()
    getObjectFromGUID(fg).setScale({0.15, 1, 0.15})
    getObjectFromGUID(fg).setPosition({hm[1], hm[2]+bh, hm[3]})
    getObjectFromGUID(fg).setPositionSmooth({hm[1], hm[2]+bh-0.2, hm[3]})
  else  showBar()  end
end

function showBar()  if noBars() then do return end  end
  local c = nil  -- CHANGE to c = 1 FOR CENTER JUSTIFIED HEALTH BARS
  local i = true  local s = (bh+1.6)/20  getObjectFromGUID(fg).lock()
  local hm = self.getPosition()  local rt = self.getRotation()  local hp = getObjectFromGUID(fg).getName()
  local m = tonumber(string.sub(hp, string.find(hp, "%/")+1))
  local n = tonumber(string.sub(hp, 1, string.find(hp, "%/")-1))  if n < 0 then n = 0 end  n = n/m
  getObjectFromGUID(fg).setScale({s, 1, s})
  getObjectFromGUID(fg).setPosition({hm[1], hm[2]+bh, hm[3]})
  getObjectFromGUID(fg).setRotation({90, rt[2]+90, 90})
  getObjectFromGUID(bg).setScale({s*n*0.8, 1, s*0.88})
  getObjectFromGUID(bg).setRotation({90, rt[2]+90, 90})
  if c then getObjectFromGUID(bg).setPosition({hm[1], hm[2]+bh, hm[3]}) else
    s = s * 4.9  s = s - (s * n)  local a = rt[2] + 90
    local x = math.sin(math.rad(a)) * s  local z = x / math.tan(math.rad(a))
    getObjectFromGUID(bg).setPosition({hm[1]+x, hm[2]+bh, hm[3]+z})
  end
  if Global.getVar("uGMnUm") then i = false end
  getObjectFromGUID(fg).interactable = i
end

function hideBar()  if noBars() then do return end  end
  getObjectFromGUID(fg).lock()  getObjectFromGUID(fg).interactable = false
  local hm = self.getPosition()  local rt = self.getRotation()
  getObjectFromGUID(fg).setPositionSmooth({hm[1], -1, hm[3]})
  getObjectFromGUID(fg).setPosition({hm[1], -1, hm[3]})
  getObjectFromGUID(bg).setPosition({hm[1], -1, hm[3]})
end

function onCollisionEnter(a)
  if not bh then do return end
  elseif a.collision_object.guid == fg then
    if self.name == "Card" then bh = 1 else bh = 0 end
    bh = (a.collision_object.getPosition().y - self.getPosition().y + 0.1) * 1.1 + bh
    if bh < 0.5 then bh = 0.5 end  cbOn({"restBar"})
  elseif a.collision_object.guid != bg then setBar() end
end

function restBar()
  getObjectFromGUID(fg).lock()
  if getObjectFromGUID(fg).resting != true then do return end  end
  cbOff()  showBar()
end

function onPickUp()  hideBar()  if not noBars() then getObjectFromGUID(fg).call("udoButtons") end  end

function hideBtns()  if os.clock()-ck < 3.5 then do return end  end  cbOff()
   getObjectFromGUID(fg).call("udoButtons")
end  function bumpHide()  ck = os.clock()  cbOn({"hideBtns"})  end

function upBar()  bh = bh*1.05  end

function onDestroy()
  if getObjectFromGUID(fg) then getObjectFromGUID(fg).destruct() end
  if getObjectFromGUID(bg) then getObjectFromGUID(bg).destruct() end
end


--tt 