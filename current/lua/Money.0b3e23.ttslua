--Counting Bowl    by MrStump

--Table of items which can be counted in this Bowl
--Each entry has 2 things to enter
    --a name (what is in the name field of that object)
    --a value (how much it is worth)
--A number in the items description will override the number entry in this table
validCountItemList = {
    ["Coin 1"] = 1,
    ["Coin 5"] = 5,
    --["Name3"] = 2,
    --["Name4"] = 31,
    --Add more entries as needed
    --Remove the -- from before a line for the script to use it
}

--END OF CODE TO EDIT

function onLoad()
    timerID = self.getGUID()..math.random(9999999999999)
    --Sets position/color for the button, spawns it
    self.createButton({
        label="", click_function="none", function_owner=self,
        position={0,0.04,-2.5}, rotation={0,180,0}, height=00, width=0,
        font_color={1,1,1}, font_size=500
    })
    --Start timer which repeats forever, running countItems() every second
    Timer.create({
        identifier=timerID,
        function_name="countItems", function_owner=self,
        repetitions=0, delay=1
    })
end

--Activated once per second, counts items in bowls
function countItems()
    local totalValue = 0
    local itemsInBowl = findItemsInSphere()
    --Go through all items found by the cast
    for _, entry in ipairs(itemsInBowl) do
        --Ignore the bowl
        if entry.hit_object ~= self then
            local tableEntry = validCountItemList[entry.hit_object.getName()]
            --Ignore if not in validCountItemList
            if tableEntry ~= nil then
                local descValue = tonumber(entry.hit_object.getDescription())
                local stackMult = math.abs(entry.hit_object.getQuantity())
                --Use value in description if available
                if descValue ~= nil then
                    totalValue = totalValue + descValue * stackMult
                else
                    --Otherwise use the value in validCountItemList
                    totalValue = totalValue + tableEntry * stackMult
                end
            end
        end
    end
    --Updates the number display
    self.editButton({index=0, label=totalValue})
end

--Gets the items in the bowl for countItems to count
function findItemsInSphere()
    --Find scaling factor
    local scale = self.getScale()
    --Set position for the sphere
    local pos = self.getPosition()
    pos.y=pos.y+(1.25*scale.y)
    --Ray trace to get all objects
    return Physics.cast({
        origin=pos, direction={0,1,0}, type=2, max_distance=0,
        size={3.4*scale.x,3.4*scale.y,3.4*scale.z}, --debug=true
    })
end

function onDestroy()
    Timer.destroy(timerID)
end